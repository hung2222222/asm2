{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Asm.react02\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\browse\\\\Browse.jsx\",\n    _s = $RefreshSig$();\n\n// import useHttp from \"../../components/hooks/use-http\";\n// import NavBa from \"../../components/NavBa/NavBa\";\n// import React, { useState, useEffect } from \"react\";\n// function Browse() {\n//   const [tasks, setTasks] = useState([]);\n//   const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n//   useEffect(() => {\n//     const transfromTasks = (tasksObj) => {\n//       const loadedTask = [];\n//       for (const taskKey in tasksObj) {\n//         loadedTask.push({ id: taskKey, text: tasksObj[taskKey].text });\n//       }\n//       setTasks(loadedTask);\n//     };\n//     fetchTasks(\n//       {\n//         url: \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\",\n//       },\n//       transfromTasks\n//     );\n//   }, [fetchTasks]);\n//   const taskAddHandler = (task) => {\n//     setTasks((prevTasks) => prevTasks.concat(task));\n//   };\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <NavBa />\n//         <div\n//           items={tasks}\n//           loading={isLoading}\n//           error={error}\n//           onFetch={fetchTasks}\n//         ></div>\n//       </section>\n//     </React.Fragment>\n//   );\n// }\n// export default Browse;\nimport { useState } from \"react\"; // import React, { useState, useEffect } from \"react\";\n\nimport NavBa from \"../../components/NavBa/NavBa\"; // import classes from \"./Borwse.module.css\";\n\nimport MovieList from \"../../components/Movie/MoviesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Browse() {\n  _s();\n\n  const [movies, setMovies] = useState([]); // const [isLoading, setIsLoading] = useState(true);\n  // const [httpError, setHttpError] = useState(false);\n  // useEffect(() => {\n  //   const fetchMeals = async () => {\n  //     const reponse = await fetch(\n  //       \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\"\n  //     );\n  //     if (!reponse.ok) {\n  //       throw new Error(\"something went wrong\"); // su dung try catch\n  //     }\n  //     // const reponseData = await reponse.json();\n  //     // const loadedMeals = [];\n  //     // for (const key in reponseData) {\n  //     //   loadedMeals.push({\n  //     //     id: key,\n  //     //     results: reponseData[key].results,\n  //     //   });\n  //     // }\n  //     setMoviList(results);\n  //     setIsLoading(false);\n  //   };\n  //   fetchMeals().catch((error) => {\n  //     setIsLoading(false);\n  //     setHttpError(error.message);\n  //   });\n  // }, []);\n  // if (isLoading) {\n  //   return (\n  //     <section className={classes.mealsLoading}>\n  //       <p>Loading...</p>\n  //     </section>\n  //   );\n  // }\n  // if (httpError) {\n  //   <section className={classes.mealsError}>\n  //     <p>{httpError}</p>\n  //   </section>;\n  // }\n  // const mealslist = movisList.map((data) => (\n  //   <div>\n  //     <img src={data.results}></img>\n  //   </div>\n  // ));\n\n  function fetchMoviesHandler() {\n    const test = () => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://image.tmdb.org/t/p/w500/${item.poster_path}\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    };\n\n    fetch(\"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\").then(response => {\n      return response.json();\n    }).then(data => {\n      const transformedMovies = data.results.map(movieData => {\n        console.log(movieData);\n        return {\n          id: movieData.id,\n          openingImg: movieData(test),\n          overview: movieData.overview\n        };\n      });\n      setMovies(transformedMovies);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMoviesHandler,\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBa, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Browse, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n\n_c = Browse;\nexport default Browse;\nexport const Info = async () => {\n  try {\n    const response = await fetch(\"https://api.themoviedb.org/3/trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\");\n    const data = await response.json();\n    console.log(data);\n    let div = document.createElement(\"div\");\n    div.className = \"row\";\n    data.results.forEach(item => {\n      let div2 = document.createElement(\"div\");\n      div2.className = \"col-4\";\n      div2.innerHTML = `<div class=\"card\">\n    <img\n      src=\"https://image.tmdb.org/t/p/w500/${item.poster_path}\"\n      class=\"card-img-top\"\n      alt=\"...\"\n    />\n\n  </div>`;\n      div.appendChild(div2);\n    });\n    document.body.appendChild(div);\n  } catch (error) {\n    console.log(error);\n  }\n};\n_c2 = Info;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Browse\");\n$RefreshReg$(_c2, \"Info\");","map":{"version":3,"names":["useState","NavBa","MovieList","Browse","movies","setMovies","fetchMoviesHandler","test","fetch","then","response","json","data","transformedMovies","results","map","movieData","console","log","id","openingImg","overview","Info","div","document","createElement","className","forEach","item","div2","innerHTML","poster_path","appendChild","body","error"],"sources":["C:/Users/Admin/Desktop/Asm.react02/Assignment 02 (Starter Code)/src/pages/browse/Browse.jsx"],"sourcesContent":["// import useHttp from \"../../components/hooks/use-http\";\n// import NavBa from \"../../components/NavBa/NavBa\";\n// import React, { useState, useEffect } from \"react\";\n\n// function Browse() {\n//   const [tasks, setTasks] = useState([]);\n\n//   const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n\n//   useEffect(() => {\n//     const transfromTasks = (tasksObj) => {\n//       const loadedTask = [];\n\n//       for (const taskKey in tasksObj) {\n//         loadedTask.push({ id: taskKey, text: tasksObj[taskKey].text });\n//       }\n//       setTasks(loadedTask);\n//     };\n//     fetchTasks(\n//       {\n//         url: \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\",\n//       },\n//       transfromTasks\n//     );\n//   }, [fetchTasks]);\n\n//   const taskAddHandler = (task) => {\n//     setTasks((prevTasks) => prevTasks.concat(task));\n//   };\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <NavBa />\n//         <div\n//           items={tasks}\n//           loading={isLoading}\n//           error={error}\n//           onFetch={fetchTasks}\n//         ></div>\n//       </section>\n//     </React.Fragment>\n//   );\n// }\n\n// export default Browse;\nimport { useState } from \"react\";\n// import React, { useState, useEffect } from \"react\";\nimport NavBa from \"../../components/NavBa/NavBa\";\n// import classes from \"./Borwse.module.css\";\nimport MovieList from \"../../components/Movie/MoviesList\";\nfunction Browse() {\n  const [movies, setMovies] = useState([]);\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [httpError, setHttpError] = useState(false);\n  // useEffect(() => {\n  //   const fetchMeals = async () => {\n  //     const reponse = await fetch(\n  //       \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\"\n  //     );\n\n  //     if (!reponse.ok) {\n  //       throw new Error(\"something went wrong\"); // su dung try catch\n  //     }\n\n  //     // const reponseData = await reponse.json();\n  //     // const loadedMeals = [];\n\n  //     // for (const key in reponseData) {\n  //     //   loadedMeals.push({\n  //     //     id: key,\n  //     //     results: reponseData[key].results,\n  //     //   });\n  //     // }\n  //     setMoviList(results);\n  //     setIsLoading(false);\n  //   };\n\n  //   fetchMeals().catch((error) => {\n  //     setIsLoading(false);\n  //     setHttpError(error.message);\n  //   });\n  // }, []);\n  // if (isLoading) {\n  //   return (\n  //     <section className={classes.mealsLoading}>\n  //       <p>Loading...</p>\n  //     </section>\n  //   );\n  // }\n  // if (httpError) {\n  //   <section className={classes.mealsError}>\n  //     <p>{httpError}</p>\n  //   </section>;\n  // }\n\n  // const mealslist = movisList.map((data) => (\n  //   <div>\n  //     <img src={data.results}></img>\n  //   </div>\n  // ));\n\n  function fetchMoviesHandler() {\n    const test = () => {\n      return (\n        <img src=\"https://image.tmdb.org/t/p/w500/${item.poster_path}\" alt=\"\" />\n      );\n    };\n    fetch(\n      \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\"\n    )\n      .then((response) => {\n        return response.json();\n      })\n\n      .then((data) => {\n        const transformedMovies = data.results.map((movieData) => {\n          console.log(movieData);\n          return {\n            id: movieData.id,\n            openingImg: movieData(test),\n\n            overview: movieData.overview,\n          };\n        });\n        setMovies(transformedMovies);\n      });\n  }\n  return (\n    <div className=\"app\">\n      <button onClick={fetchMoviesHandler}>test</button>\n      {/* <div>\n        <Info />\n      </div> */}\n      <NavBa />\n      <MovieList movies={movies} />\n    </div>\n  );\n}\n\nexport default Browse;\n\nexport const Info = async () => {\n  try {\n    const response = await fetch(\n      \"https://api.themoviedb.org/3/trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\"\n    );\n    const data = await response.json();\n    console.log(data);\n    let div = document.createElement(\"div\");\n    div.className = \"row\";\n    data.results.forEach((item) => {\n      let div2 = document.createElement(\"div\");\n      div2.className = \"col-4\";\n      div2.innerHTML = `<div class=\"card\">\n    <img\n      src=\"https://image.tmdb.org/t/p/w500/${item.poster_path}\"\n      class=\"card-img-top\"\n      alt=\"...\"\n    />\n\n  </div>`;\n      div.appendChild(div2);\n    });\n    document.body.appendChild(div);\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}