{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Asm.react02\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\browse\\\\Browse.jsx\",\n    _s = $RefreshSig$();\n\n// import useHttp from \"../../components/hooks/use-http\";\n// import NavBa from \"../../components/NavBa/NavBa\";\n// import React, { useState, useEffect } from \"react\";\n// function Browse() {\n//   const [tasks, setTasks] = useState([]);\n//   const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n//   useEffect(() => {\n//     const transfromTasks = (tasksObj) => {\n//       const loadedTask = [];\n//       for (const taskKey in tasksObj) {\n//         loadedTask.push({ id: taskKey, text: tasksObj[taskKey].text });\n//       }\n//       setTasks(loadedTask);\n//     };\n//     fetchTasks(\n//       {\n//         url: \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\",\n//       },\n//       transfromTasks\n//     );\n//   }, [fetchTasks]);\n//   const taskAddHandler = (task) => {\n//     setTasks((prevTasks) => prevTasks.concat(task));\n//   };\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <NavBa />\n//         <div\n//           items={tasks}\n//           loading={isLoading}\n//           error={error}\n//           onFetch={fetchTasks}\n//         ></div>\n//       </section>\n//     </React.Fragment>\n//   );\n// }\n// export default Browse;\nimport React, { useState, useEffect } from \"react\";\nimport NavBa from \"../../components/NavBa/NavBa\";\nimport classes from \"./Borwse.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Browse() {\n  _s();\n\n  const [movisList, setMoviList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(false);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const reponse = await fetch(\"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\");\n\n      if (!reponse.ok) {\n        throw new Error(\"something went wrong\"); // su dung try catch\n      } // const reponseData = await reponse.json();\n      // const loadedMeals = [];\n      // for (const key in reponseData) {\n      //   loadedMeals.push({\n      //     id: key,\n      //     results: reponseData[key].results,\n      //   });\n      // }\n\n\n      setMoviList(results);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    /*#__PURE__*/\n    _jsxDEV(\"section\", {\n      className: classes.mealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this);\n  }\n\n  const mealslist = meals.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(NavBa, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mealslist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Browse, \"a3q4LMjYilRJEyvmLC0R0Jadess=\");\n\n_c = Browse;\nexport default Browse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Browse\");","map":{"version":3,"names":["React","useState","useEffect","NavBa","classes","Browse","movisList","setMoviList","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","reponse","fetch","ok","Error","results","catch","error","message","mealsLoading","mealsError","mealslist","meals","map","data"],"sources":["C:/Users/Admin/Desktop/Asm.react02/Assignment 02 (Starter Code)/src/pages/browse/Browse.jsx"],"sourcesContent":["// import useHttp from \"../../components/hooks/use-http\";\n// import NavBa from \"../../components/NavBa/NavBa\";\n// import React, { useState, useEffect } from \"react\";\n\n// function Browse() {\n//   const [tasks, setTasks] = useState([]);\n\n//   const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n\n//   useEffect(() => {\n//     const transfromTasks = (tasksObj) => {\n//       const loadedTask = [];\n\n//       for (const taskKey in tasksObj) {\n//         loadedTask.push({ id: taskKey, text: tasksObj[taskKey].text });\n//       }\n//       setTasks(loadedTask);\n//     };\n//     fetchTasks(\n//       {\n//         url: \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\",\n//       },\n//       transfromTasks\n//     );\n//   }, [fetchTasks]);\n\n//   const taskAddHandler = (task) => {\n//     setTasks((prevTasks) => prevTasks.concat(task));\n//   };\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <NavBa />\n//         <div\n//           items={tasks}\n//           loading={isLoading}\n//           error={error}\n//           onFetch={fetchTasks}\n//         ></div>\n//       </section>\n//     </React.Fragment>\n//   );\n// }\n\n// export default Browse;\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBa from \"../../components/NavBa/NavBa\";\nimport classes from \"./Borwse.module.css\";\nfunction Browse() {\n  const [movisList, setMoviList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(false);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const reponse = await fetch(\n        \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\"\n      );\n\n      if (!reponse.ok) {\n        throw new Error(\"something went wrong\"); // su dung try catch\n      }\n\n      // const reponseData = await reponse.json();\n      // const loadedMeals = [];\n\n      // for (const key in reponseData) {\n      //   loadedMeals.push({\n      //     id: key,\n      //     results: reponseData[key].results,\n      //   });\n      // }\n      setMoviList(results);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return (\n      <section className={classes.mealsLoading}>\n        <p>Loading...</p>\n      </section>\n    );\n  }\n  if (httpError) {\n    <section className={classes.mealsError}>\n      <p>{httpError}</p>\n    </section>;\n  }\n\n  const mealslist = meals.map((data) => (\n    <div>\n      <img src={data.results}></img>\n    </div>\n  ));\n  return (\n    <div className=\"app\">\n      <NavBa />\n      <ul>{mealslist}</ul>\n    </div>\n  );\n}\n\nexport default Browse;\n"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;AACA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BN,QAAQ,CAAC,EAAD,CAAzC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,YAAY;MAC7B,MAAMC,OAAO,GAAG,MAAMC,KAAK,CACzB,0GADyB,CAA3B;;MAIA,IAAI,CAACD,OAAO,CAACE,EAAb,EAAiB;QACf,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN,CADe,CAC0B;MAC1C,CAP4B,CAS7B;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;;;MACAT,WAAW,CAACU,OAAD,CAAX;MACAR,YAAY,CAAC,KAAD,CAAZ;IACD,CApBD;;IAsBAG,UAAU,GAAGM,KAAb,CAAoBC,KAAD,IAAW;MAC5BV,YAAY,CAAC,KAAD,CAAZ;MACAE,YAAY,CAACQ,KAAK,CAACC,OAAP,CAAZ;IACD,CAHD;EAID,CA3BQ,EA2BN,EA3BM,CAAT;;EA4BA,IAAIZ,SAAJ,EAAe;IACb,oBACE;MAAS,SAAS,EAAEJ,OAAO,CAACiB,YAA5B;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EACD,IAAIX,SAAJ,EAAe;IACb;IAAA;MAAS,SAAS,EAAEN,OAAO,CAACkB,UAA5B;MAAA,uBACE;QAAA,UAAIZ;MAAJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAGD;;EAED,MAAMa,SAAS,GAAGC,KAAK,CAACC,GAAN,CAAWC,IAAD,iBAC1B;IAAA,uBACE;MAAK,GAAG,EAAEA,IAAI,CAACT;IAAf;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADgB,CAAlB;EAKA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKM;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAxDQlB,M;;KAAAA,M;AA0DT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}