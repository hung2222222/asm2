{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Asm.react02\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\browse\\\\Browse.jsx\",\n    _s = $RefreshSig$();\n\n// import useHttp from \"../../components/hooks/use-http\";\n// import NavBa from \"../../components/NavBa/NavBa\";\n// import React, { useState, useEffect } from \"react\";\n// function Browse() {\n//   const [tasks, setTasks] = useState([]);\n//   const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n//   useEffect(() => {\n//     const transfromTasks = (tasksObj) => {\n//       const loadedTask = [];\n//       for (const taskKey in tasksObj) {\n//         loadedTask.push({ id: taskKey, text: tasksObj[taskKey].text });\n//       }\n//       setTasks(loadedTask);\n//     };\n//     fetchTasks(\n//       {\n//         url: \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\",\n//       },\n//       transfromTasks\n//     );\n//   }, [fetchTasks]);\n//   const taskAddHandler = (task) => {\n//     setTasks((prevTasks) => prevTasks.concat(task));\n//   };\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <NavBa />\n//         <div\n//           items={tasks}\n//           loading={isLoading}\n//           error={error}\n//           onFetch={fetchTasks}\n//         ></div>\n//       </section>\n//     </React.Fragment>\n//   );\n// }\n// export default Browse;\nimport React, { useState, useEffect } from \"react\";\nimport NavBa from \"../../components/NavBa/NavBa\";\nimport classes from \"./Borwse.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Browse() {\n  _s();\n\n  //   const [meals, setMeals] = useState([]);\n  //   const [isLoading, setIsLoading] = useState(true);\n  //   const [httpError, setHttpError] = useState(false);\n  //   useEffect(() => {\n  //     const fetchMeals = async () => {\n  //       const reponse = await fetch(\n  //         \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\"\n  //       );\n  //       if (!reponse.ok) {\n  //         throw new Error(\"something went wrong\"); // su dung try catch\n  //       }\n  //       const reponseData = await reponse.json();\n  //       const loadedMeals = [];\n  //       for (const key in reponseData) {\n  //         loadedMeals.push({\n  //           id: key,\n  //           backdrop_path: reponseData[key].backdrop_path,\n  //         });\n  //       }\n  //       setMeals(loadedMeals);\n  //       setIsLoading(false);\n  //     };\n  //     fetchMeals().catch((error) => {\n  //       setIsLoading(false);\n  //       setHttpError(error.message);\n  //     });\n  //   }, []);\n  //   if (isLoading) {\n  //     return (\n  //       <section className={classes.mealsLoading}>\n  //         <p>Loading...</p>\n  //       </section>\n  //     );\n  //   }\n  //   if (httpError) {\n  //     <section className={classes.mealsError}>\n  //       <p>{httpError}</p>\n  //     </section>;\n  //   }\n  //   const mealslist = meals.map((meal) => (\n  //     <div>\n  //       key={meal.id}\n  //       backdrop_path={meal.backdrop_path}\n  //     </div>\n  //   ));\n  //   return (\n  //     <div className=\"app\">\n  //       <NavBa />\n  //       <ul>{mealslist}</ul>\n  //     </div>\n  //   );\n  // }\n  const [meals, setMeals] = useState([]); //xử lý trạng thái loadding\n\n  const [isLoading, setIsLoading] = useState(true); //xử lý lỗi\n\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const reponse = await fetch(\"https://react-b12-default-rtdb.firebaseio.com/meals.json\"); //điều kiện báo lỗi\n\n      if (!reponse.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const reponseData = await reponse.json();\n      const loadedMeals = [];\n\n      for (const key in reponseData) {\n        loadedMeals.push({\n          id: key,\n          name: reponseData[key].name,\n          description: reponseData[key].description,\n          price: reponseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    }; //hiển thị thông báo lỗi\n\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []); //nếu không tải được thì thông báo loading..\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  } // gán dữ liệu theo name,sử dụng div từ comp0nent MealsItem\n\n\n  const mealslist = meals.map(meal => /*#__PURE__*/_jsxDEV(MealsItem, {\n    id: meal.name,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.section,\n    children: /*#__PURE__*/_jsxDEV(Cart, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealslist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Browse, \"GNhuq97CrYTRGtb4EdV+fANyLyQ=\");\n\n_c = Browse;\nexport default Browse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Browse\");","map":{"version":3,"names":["React","useState","useEffect","NavBa","classes","Browse","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","reponse","fetch","ok","Error","reponseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","mealsLoading","mealsError","mealslist","map","meal","section"],"sources":["C:/Users/Admin/Desktop/Asm.react02/Assignment 02 (Starter Code)/src/pages/browse/Browse.jsx"],"sourcesContent":["// import useHttp from \"../../components/hooks/use-http\";\n// import NavBa from \"../../components/NavBa/NavBa\";\n// import React, { useState, useEffect } from \"react\";\n\n// function Browse() {\n//   const [tasks, setTasks] = useState([]);\n\n//   const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n\n//   useEffect(() => {\n//     const transfromTasks = (tasksObj) => {\n//       const loadedTask = [];\n\n//       for (const taskKey in tasksObj) {\n//         loadedTask.push({ id: taskKey, text: tasksObj[taskKey].text });\n//       }\n//       setTasks(loadedTask);\n//     };\n//     fetchTasks(\n//       {\n//         url: \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\",\n//       },\n//       transfromTasks\n//     );\n//   }, [fetchTasks]);\n\n//   const taskAddHandler = (task) => {\n//     setTasks((prevTasks) => prevTasks.concat(task));\n//   };\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <NavBa />\n//         <div\n//           items={tasks}\n//           loading={isLoading}\n//           error={error}\n//           onFetch={fetchTasks}\n//         ></div>\n//       </section>\n//     </React.Fragment>\n//   );\n// }\n\n// export default Browse;\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBa from \"../../components/NavBa/NavBa\";\nimport classes from \"./Borwse.module.css\";\nfunction Browse() {\n  //   const [meals, setMeals] = useState([]);\n  //   const [isLoading, setIsLoading] = useState(true);\n  //   const [httpError, setHttpError] = useState(false);\n  //   useEffect(() => {\n  //     const fetchMeals = async () => {\n  //       const reponse = await fetch(\n  //         \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\"\n  //       );\n\n  //       if (!reponse.ok) {\n  //         throw new Error(\"something went wrong\"); // su dung try catch\n  //       }\n\n  //       const reponseData = await reponse.json();\n  //       const loadedMeals = [];\n\n  //       for (const key in reponseData) {\n  //         loadedMeals.push({\n  //           id: key,\n  //           backdrop_path: reponseData[key].backdrop_path,\n  //         });\n  //       }\n  //       setMeals(loadedMeals);\n  //       setIsLoading(false);\n  //     };\n\n  //     fetchMeals().catch((error) => {\n  //       setIsLoading(false);\n  //       setHttpError(error.message);\n  //     });\n  //   }, []);\n  //   if (isLoading) {\n  //     return (\n  //       <section className={classes.mealsLoading}>\n  //         <p>Loading...</p>\n  //       </section>\n  //     );\n  //   }\n  //   if (httpError) {\n  //     <section className={classes.mealsError}>\n  //       <p>{httpError}</p>\n  //     </section>;\n  //   }\n\n  //   const mealslist = meals.map((meal) => (\n  //     <div>\n  //       key={meal.id}\n  //       backdrop_path={meal.backdrop_path}\n  //     </div>\n  //   ));\n  //   return (\n  //     <div className=\"app\">\n  //       <NavBa />\n  //       <ul>{mealslist}</ul>\n  //     </div>\n  //   );\n  // }\n\n  const [meals, setMeals] = useState([]);\n  //xử lý trạng thái loadding\n  const [isLoading, setIsLoading] = useState(true);\n  //xử lý lỗi\n  const [httpError, setHttpError] = useState(null);\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const reponse = await fetch(\n        \"https://react-b12-default-rtdb.firebaseio.com/meals.json\"\n      );\n      //điều kiện báo lỗi\n      if (!reponse.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const reponseData = await reponse.json();\n\n      const loadedMeals = [];\n\n      for (const key in reponseData) {\n        loadedMeals.push({\n          id: key,\n          name: reponseData[key].name,\n          description: reponseData[key].description,\n          price: reponseData[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    //hiển thị thông báo lỗi\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  //nếu không tải được thì thông báo loading..\n  if (isLoading) {\n    return (\n      <section className={classes.mealsLoading}>\n        <p>Loading...</p>\n      </section>\n    );\n  }\n\n  if (httpError) {\n    return (\n      <section className={classes.mealsError}>\n        <p>{httpError}</p>\n      </section>\n    );\n  }\n\n  // gán dữ liệu theo name,sử dụng div từ comp0nent MealsItem\n  const mealslist = meals.map((meal) => (\n    <MealsItem\n      key={meal.id}\n      id={meal.name}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n  return (\n    <section className={classes.section}>\n      <Cart>\n        <ul>{mealslist}</ul>\n      </Cart>\n    </section>\n  );\n}\nexport default Browse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}