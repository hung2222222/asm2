{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Asm.react02\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\browse\\\\Browse.jsx\",\n    _s = $RefreshSig$();\n\n// import useHttp from \"../../components/hooks/use-http\";\n// import NavBa from \"../../components/NavBa/NavBa\";\n// import React, { useState, useEffect } from \"react\";\n// function Browse() {\n//   const [tasks, setTasks] = useState([]);\n//   const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n//   useEffect(() => {\n//     const transfromTasks = (tasksObj) => {\n//       const loadedTask = [];\n//       for (const taskKey in tasksObj) {\n//         loadedTask.push({ id: taskKey, text: tasksObj[taskKey].text });\n//       }\n//       setTasks(loadedTask);\n//     };\n//     fetchTasks(\n//       {\n//         url: \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\",\n//       },\n//       transfromTasks\n//     );\n//   }, [fetchTasks]);\n//   const taskAddHandler = (task) => {\n//     setTasks((prevTasks) => prevTasks.concat(task));\n//   };\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <NavBa />\n//         <div\n//           items={tasks}\n//           loading={isLoading}\n//           error={error}\n//           onFetch={fetchTasks}\n//         ></div>\n//       </section>\n//     </React.Fragment>\n//   );\n// }\n// export default Browse;\nimport React, { useState, useEffect } from \"react\";\nimport NavBa from \"../../components/NavBa/NavBa\"; // import classes from \"./Borwse.module.css\";\n\nimport MovieList from \"../../components/Movie/MoviesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Browse() {\n  _s();\n\n  const [movies, setMovies] = useState([]); // const [isLoading, setIsLoading] = useState(true);\n  // const [httpError, setHttpError] = useState(false);\n  // useEffect(() => {\n  //   const fetchMeals = async () => {\n  //     const reponse = await fetch(\n  //       \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\"\n  //     );\n  //     if (!reponse.ok) {\n  //       throw new Error(\"something went wrong\"); // su dung try catch\n  //     }\n  //     // const reponseData = await reponse.json();\n  //     // const loadedMeals = [];\n  //     // for (const key in reponseData) {\n  //     //   loadedMeals.push({\n  //     //     id: key,\n  //     //     results: reponseData[key].results,\n  //     //   });\n  //     // }\n  //     setMoviList(results);\n  //     setIsLoading(false);\n  //   };\n  //   fetchMeals().catch((error) => {\n  //     setIsLoading(false);\n  //     setHttpError(error.message);\n  //   });\n  // }, []);\n  // if (isLoading) {\n  //   return (\n  //     <section className={classes.mealsLoading}>\n  //       <p>Loading...</p>\n  //     </section>\n  //   );\n  // }\n  // if (httpError) {\n  //   <section className={classes.mealsError}>\n  //     <p>{httpError}</p>\n  //   </section>;\n  // }\n  // const mealslist = movisList.map((data) => (\n  //   <div>\n  //     <img src={data.results}></img>\n  //   </div>\n  // ));\n\n  function fetchMoviesHandler() {\n    fetch(\"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\").then(response => {\n      return response.json();\n    }).then(data => {\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.id,\n          openingImg: movieData.backdrop_path\n        };\n      });\n      setMovies(transformedMovies);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMoviesHandler,\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBa, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fetch\",\n      children: /*#__PURE__*/_jsxDEV(\"fetchData\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Browse, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n\n_c = Browse;\nexport default Browse; // export const Info = async () => {\n//   try {\n//     const response = await fetch(\n//       \"https://api.themoviedb.org/3/trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\"\n//     );\n//     const data = await response.json();\n//     console.log(data);\n//     let div = document.createElement(\"div\");\n//     div.className = \"row\";\n//     data.results.forEach((item) => {\n//       let div2 = document.createElement(\"div\");\n//       div2.className = \"col-4\";\n//       div2.innerHTML = `<div class=\"card\">\n//     <img\n//       src=\"https://image.tmdb.org/t/p/w500/${item.poster_path}\"\n//       class=\"card-img-top\"\n//       alt=\"...\"\n//     />\n//   </div>`;\n//       div.appendChild(div2);\n//     });\n//     document.body.appendChild(div);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\nuseEffect(() => {\n  const url = \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\";\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(url);\n      const json = await response.json();\n      console.log(json);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  fetchData();\n}, []); // test\n\nvar _c;\n\n$RefreshReg$(_c, \"Browse\");","map":{"version":3,"names":["React","useState","useEffect","NavBa","MovieList","Browse","movies","setMovies","fetchMoviesHandler","fetch","then","response","json","data","transformedMovies","results","map","movieData","id","openingImg","backdrop_path","url","fetchData","console","log","error"],"sources":["C:/Users/Admin/Desktop/Asm.react02/Assignment 02 (Starter Code)/src/pages/browse/Browse.jsx"],"sourcesContent":["// import useHttp from \"../../components/hooks/use-http\";\n// import NavBa from \"../../components/NavBa/NavBa\";\n// import React, { useState, useEffect } from \"react\";\n\n// function Browse() {\n//   const [tasks, setTasks] = useState([]);\n\n//   const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n\n//   useEffect(() => {\n//     const transfromTasks = (tasksObj) => {\n//       const loadedTask = [];\n\n//       for (const taskKey in tasksObj) {\n//         loadedTask.push({ id: taskKey, text: tasksObj[taskKey].text });\n//       }\n//       setTasks(loadedTask);\n//     };\n//     fetchTasks(\n//       {\n//         url: \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\",\n//       },\n//       transfromTasks\n//     );\n//   }, [fetchTasks]);\n\n//   const taskAddHandler = (task) => {\n//     setTasks((prevTasks) => prevTasks.concat(task));\n//   };\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <NavBa />\n//         <div\n//           items={tasks}\n//           loading={isLoading}\n//           error={error}\n//           onFetch={fetchTasks}\n//         ></div>\n//       </section>\n//     </React.Fragment>\n//   );\n// }\n\n// export default Browse;\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBa from \"../../components/NavBa/NavBa\";\n// import classes from \"./Borwse.module.css\";\nimport MovieList from \"../../components/Movie/MoviesList\";\nfunction Browse() {\n  const [movies, setMovies] = useState([]);\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [httpError, setHttpError] = useState(false);\n  // useEffect(() => {\n  //   const fetchMeals = async () => {\n  //     const reponse = await fetch(\n  //       \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\"\n  //     );\n\n  //     if (!reponse.ok) {\n  //       throw new Error(\"something went wrong\"); // su dung try catch\n  //     }\n\n  //     // const reponseData = await reponse.json();\n  //     // const loadedMeals = [];\n\n  //     // for (const key in reponseData) {\n  //     //   loadedMeals.push({\n  //     //     id: key,\n  //     //     results: reponseData[key].results,\n  //     //   });\n  //     // }\n  //     setMoviList(results);\n  //     setIsLoading(false);\n  //   };\n\n  //   fetchMeals().catch((error) => {\n  //     setIsLoading(false);\n  //     setHttpError(error.message);\n  //   });\n  // }, []);\n  // if (isLoading) {\n  //   return (\n  //     <section className={classes.mealsLoading}>\n  //       <p>Loading...</p>\n  //     </section>\n  //   );\n  // }\n  // if (httpError) {\n  //   <section className={classes.mealsError}>\n  //     <p>{httpError}</p>\n  //   </section>;\n  // }\n\n  // const mealslist = movisList.map((data) => (\n  //   <div>\n  //     <img src={data.results}></img>\n  //   </div>\n  // ));\n\n  function fetchMoviesHandler() {\n    fetch(\n      \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\"\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        const transformedMovies = data.results.map((movieData) => {\n          return {\n            id: movieData.id,\n            openingImg: movieData.backdrop_path,\n          };\n        });\n        setMovies(transformedMovies);\n      });\n  }\n  return (\n    <div className=\"app\">\n      <button onClick={fetchMoviesHandler}>test</button>\n      <NavBa />\n      {/* <div className=\"info\">\n        <Info />\n      </div> */}\n      <MovieList movies={movies} />\n      <div className=\"fetch\">\n        <fetchData />\n      </div>\n    </div>\n  );\n}\n\nexport default Browse;\n\n// export const Info = async () => {\n//   try {\n//     const response = await fetch(\n//       \"https://api.themoviedb.org/3/trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US\"\n//     );\n//     const data = await response.json();\n//     console.log(data);\n//     let div = document.createElement(\"div\");\n//     div.className = \"row\";\n//     data.results.forEach((item) => {\n//       let div2 = document.createElement(\"div\");\n//       div2.className = \"col-4\";\n//       div2.innerHTML = `<div class=\"card\">\n//     <img\n//       src=\"https://image.tmdb.org/t/p/w500/${item.poster_path}\"\n//       class=\"card-img-top\"\n//       alt=\"...\"\n//     />\n\n//   </div>`;\n//       div.appendChild(div2);\n//     });\n//     document.body.appendChild(div);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\nuseEffect(() => {\n  const url =\n    \"https://api.themoviedb.org/3//trending/all/week?api_key=d79a59f8d47b95ae03f0e52a9235a4de&language=en-US/\";\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(url);\n      const json = await response.json();\n      console.log(json);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  fetchData();\n}, []);\n// test\n"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,8BAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;;AACA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CADgB,CAEhB;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EAEA,SAASO,kBAAT,GAA8B;IAC5BC,KAAK,CACH,0GADG,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAc;MAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACD,CALH,EAMGF,IANH,CAMSG,IAAD,IAAU;MACd,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;QACxD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACC,EADT;UAELC,UAAU,EAAEF,SAAS,CAACG;QAFjB,CAAP;MAID,CALyB,CAA1B;MAMAb,SAAS,CAACO,iBAAD,CAAT;IACD,CAdH;EAeD;;EACD,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAQ,OAAO,EAAEN,kBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAME,QAAC,SAAD;MAAW,MAAM,EAAEF;IAAnB;MAAA;MAAA;MAAA;IAAA,QANF,eAOE;MAAK,SAAS,EAAC,OAAf;MAAA,uBACE;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAjFQD,M;;KAAAA,M;AAmFT,eAAeA,MAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,SAAS,CAAC,MAAM;EACd,MAAMmB,GAAG,GACP,0GADF;;EAGA,MAAMC,SAAS,GAAG,YAAY;IAC5B,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMF,KAAK,CAACY,GAAD,CAA5B;MACA,MAAMT,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,EAAnB;MACAW,OAAO,CAACC,GAAR,CAAYZ,IAAZ;IACD,CAJD,CAIE,OAAOa,KAAP,EAAc;MACdF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;IACD;EACF,CARD;;EAUAH,SAAS;AACV,CAfQ,EAeN,EAfM,CAAT,C,CAgBA"},"metadata":{},"sourceType":"module"}